# Port Map
# 9001 - postgres
# 9002 - otel-lgtm
# 9003 - otel-lgtm
# 9004 - otel-lgtm
# 9005 - minio
# 9006 - minio console
# 9007 - langfuse-worker
# 9008 - langfuse-web
# 9009 - powersync
# 9010 - rabbitmq
# 9011 - rabbitmq management
# 9012 - litellm

name: connectors-monorepo
services:
  postgres:
    image: postgres:17
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 9001:5432
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_PASSWORD: postgres
    command: ["postgres", "-c", "wal_level=logical"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: '10s'
      timeout: '30s'
      retries: 5
      start_period: '20s'

  redis:
    image: redis:8-alpine
    volumes:
      - redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 10s
      retries: 10

  rabbitmq:
    image: rabbitmq:4-management
    restart: always
    hostname: rabbit1
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    ports:
      - 9010:5672
      - 9011:15672
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq

  powersync:
    profiles: ["agentic-outlook-mcp"] # To run this profile `docker-compose --profile agentic-outlook-mcp up -d`
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    image: journeyapps/powersync-service:1.15.7
    command: ["start", "-r", "unified"]
    volumes:
      - ./services/agentic-outlook-mcp/powersync/config.yaml:/config/config.yaml
      - ./services/agentic-outlook-mcp/powersync/sync_rules.yaml:/config/sync_rules.yaml
    environment:
      POWERSYNC_CONFIG_PATH: /config/config.yaml
    ports:
      - 9009:8080

  litellm:
    profiles: ["agentic-outlook-mcp"] # To run this profile `docker-compose --profile agentic-outlook-mcp up -d`
    image: ghcr.io/berriai/litellm-database:main-v1.78.2-nightly
    environment:
      HOST: 0.0.0.0
      PORT: 4444
      LITELLM_LOG: "DEBUG"
      LITELLM_MODE: "DEVELOPMENT"
      LITELLM_MASTER_KEY: "sk-1234"
      LITELLM_SALT_KEY: "sk-1234"
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/litellm"
      REDIS_URL: "redis://redis:6379/7"
      ANTHROPHIC_API_KEY: "${ANTHROPHIC_API_KEY}" # To inject this API key run `docker-compose --profile agentic-outlook-mcp up -d --env-file services/agentic-outlook-mcp/.env up -d`
    ports:
      - 9012:4444
    volumes:
      - ./services/agentic-outlook-mcp/litellm/config.yaml:/etc/litellm/config.yaml
    command: "--config /etc/litellm/config.yaml --detailed_debug"

  otel-lgtm:
    image: grafana/otel-lgtm
    ports:
      - '9002:3000'
      - '9003:4317'
      - '9004:4318'
    restart: always

  minio:
    image: minio/minio
    restart: always
    entrypoint: sh
    # create the 'langfuse' bucket before starting the service
    command: -c 'mkdir -p /data/langfuse && minio server --address ":9000" --console-address ":9001" /data'
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniosecret
    ports:
      - 9005:9000
      - 9006:9001
    volumes:
      - minio:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 5s
      retries: 5
      start_period: 1s

  clickhouse:
    image: clickhouse/clickhouse-server
    restart: always
    user: "101:101"
    environment:
      CLICKHOUSE_DB: default
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_logs:/var/log/clickhouse-server
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 1s

  langfuse-worker:
    image: langfuse/langfuse-worker:3.118
    restart: always
    depends_on: &langfuse-depends-on
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    ports:
      - 9007:3030
    environment: &langfuse-worker-env
      NEXTAUTH_URL: http://localhost:9008
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/langfuse
      SALT: "12345678"
      ENCRYPTION_KEY: "a77fd5b995975c2252899f21e6fd0cd7d346c01ef3300a11eff75f9a33c045c1"
      TELEMETRY_ENABLED: false
      LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: true
      CLICKHOUSE_MIGRATION_URL: clickhouse://clickhouse:9000
      CLICKHOUSE_URL: http://clickhouse:8123
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_PASSWORD: clickhouse
      CLICKHOUSE_CLUSTER_ENABLED: false
      LANGFUSE_USE_AZURE_BLOB: false
      LANGFUSE_S3_EVENT_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_EVENT_UPLOAD_REGION: auto
      LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: http://minio:9000
      LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: true
      LANGFUSE_S3_EVENT_UPLOAD_PREFIX: events/
      LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: langfuse
      LANGFUSE_S3_MEDIA_UPLOAD_REGION: auto
      LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: minio
      LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: http://localhost:9090
      LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: true
      LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: media/
      LANGFUSE_S3_BATCH_EXPORT_ENABLED: false
      LANGFUSE_S3_BATCH_EXPORT_BUCKET: langfuse
      LANGFUSE_S3_BATCH_EXPORT_PREFIX: exports/
      LANGFUSE_S3_BATCH_EXPORT_REGION: auto
      LANGFUSE_S3_BATCH_EXPORT_ENDPOINT: http://minio:9000
      LANGFUSE_S3_BATCH_EXPORT_EXTERNAL_ENDPOINT: http://localhost:9005
      LANGFUSE_S3_BATCH_EXPORT_ACCESS_KEY_ID: minio
      LANGFUSE_S3_BATCH_EXPORT_SECRET_ACCESS_KEY: miniosecret
      LANGFUSE_S3_BATCH_EXPORT_FORCE_PATH_STYLE: true
      REDIS_CONNECTION_STRING: redis://redis:6379/1

  langfuse-web:
    image: docker.io/langfuse/langfuse:3.118
    restart: always
    depends_on: *langfuse-depends-on
    ports:
      - 9008:3000
    environment:
      <<: *langfuse-worker-env
      NEXTAUTH_SECRET: mysecret
      LANGFUSE_INIT_ORG_ID: unique
      LANGFUSE_INIT_ORG_NAME: Unique
      LANGFUSE_INIT_PROJECT_ID: local
      LANGFUSE_INIT_PROJECT_NAME: Local
      LANGFUSE_INIT_PROJECT_PUBLIC_KEY: pk-lf-1234567890
      LANGFUSE_INIT_PROJECT_SECRET_KEY: sk-lf-1234567890
      LANGFUSE_INIT_USER_EMAIL: admin@example.com
      LANGFUSE_INIT_USER_NAME: admin
      LANGFUSE_INIT_USER_PASSWORD: RootPassword1!

volumes:
  postgres:
  redis:
  rabbitmq:
  minio:
  qdrant:
  clickhouse_data:
  clickhouse_logs:
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/fundamentals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Returns Company Fundamental Data.
         * @description Retrieves FactSet Fundamental standardized data for specified securities. Use the ```/metrics``` endpoint to retrieve a full list of valid metrics or data items.
         *
         *
         *     The ```/fundamentals``` endpoint currently supports Long Running asynchronous requests up to **20 minutes** via batch parameter. Id limit is set to 2000 ids per request when using batch capability and 250 ids without batching. (1 metric per ID, for 1 day in both the cases). This feature is available for all users.
         *
         */
        get: operations["getFdsFundamentals"];
        put?: never;
        /**
         * Returns Company Fundamental Data.
         * @description Retrieves FactSet Fundamental standardized data for specified securities. Use the ```/metrics``` endpoint to retrieve a full list of valid metrics or data items.
         *
         *
         *     The ```/fundamentals``` endpoint currently supports Long Running asynchronous requests up to **20 minutes** via batch parameter. Id limit is set to 5000 ids per request when using batch capability and 250 ids per request without batching (1 metric per ID, for 1 day in both the cases). This feature is available for all users.
         *
         */
        post: operations["getFdsFundamentalsForList"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/segments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Returns Company Segments data.
         * @description Retrieves Fundamentals Metrics data for individual companies.
         *
         *     The ```/segments``` endpoint currently supports Long Running asynchronous requests up to **20 minutes** via batch parameter. Id limit is set to 2000 ids per request when using batch capability and 250 ids without batching. (1 metric per ID, for 1 day in both the cases). This feature is available for all users.
         *
         */
        get: operations["getFdsSegments"];
        put?: never;
        /**
         * Returns Company Segment Data.
         * @description Retrieves Sales Metrics data for specified companies.
         *
         *     The ```/segments``` endpoint currently supports Long Running asynchronous requests up to **20 minutes** via batch parameter. Id limit is set to 5000 ids per request when using batch capability and 250 ids per request without batching (1 metric per ID, for 1 day in both the cases). This feature is available for all users.
         *
         */
        post: operations["getFdsSegmentsForList"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/company-reports/financial-statement": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Returns company financial data.
         * @description Returns company financial data (preliminary or final) for specified security and statement type (income statement, balance sheet, cash flow), for various fiscal reporting periods. All values provided in the response are absolute.<br>
         *     **Note:** Due to variations in calculation time of average exchange rates, there may be some minor differences in the values of company report financial statement attributes if you are requesting for a currency other than local, when compared to the workstation.
         *
         */
        get: operations["getFinancials"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/company-reports/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Returns company profile information for a specified list of identifiers.
         * @description Retrieves a comprehensive overview of key profile details and information of specified list of identifiers. The response includes the company name, address, industry, sector, number of employees, CEO, business summary, exchange, market capitalization, shares outstanding, P/E ratio, year founded, and other details. All values provided in the response are absolute.
         *
         */
        get: operations["getFdsProfiles"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/company-reports/fundamentals": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Returns company fundamentals for a given list of identifiers.
         * @description Returns detailed insights on specified publicly traded company's various key financial measures or fundamentals like cash per share, dividend, EPS, EBIT etc. All values provided in the response are absolute.<br>
         *     **Note:** Due to variations in calculation time of average exchange rates, there may be some minor differences in the values of company report financial statement attributes if you are requesting for a currency other than local, when compared to the workstation.
         *
         */
        get: operations["getFundamentals"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/metrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Returns available FactSet Fundamental metrics and ratios.
         * @description Returns list of available FF_* metrics that can be used in the `metrics` parameter of related endpoints. These are related to FactSet Fundamentals standardized data. As Reported will be available in future endpoints. Leave Category and Subcategory blank to request all available items. The Endpoint Data model is optimized for time-series data with periodicity. Some items in this list are non-time series.
         *     **For methodology definitions, reference the `OApageID` or `OAurl` response items to launch the available methodology page.**
         *
         */
        get: operations["getFdsFundamentalsMetrics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/batch-status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Returns the status for a Batch Request
         * @description Return the status for the underlying batch request that is specified by the id.
         */
        get: operations["getBatchStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/batch-result": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Returns the response for a Batch Request
         * @description Returns the response data for the underlying batch request that is specified by the id.
         *
         *     By default, this endpoint will return data as JSON. If you wish to receive your data in CSV format, you can edit the header to have the "accept" parameter as "text/csv" instead of "application/json".
         *
         */
        get: operations["getBatchData"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Fundamentals Request Body
         * @description Fundamentals request body elements
         */
        FundamentalsRequest: {
            data: components["schemas"]["FundamentalRequestBody"];
        };
        /**
         * Fundamentals Request Body
         * @description Fundamentals request body elements
         */
        FundamentalRequestBody: {
            ids: components["schemas"]["IdsBatchMax30000"];
            periodicity?: components["schemas"]["Periodicity"];
            fiscalPeriod?: components["schemas"]["FundamentalFiscalPeriod"];
            metrics: components["schemas"]["Metrics"];
            currency?: components["schemas"]["Currency"];
            updateType?: components["schemas"]["UpdateType"];
            batch?: components["schemas"]["Batch"];
        };
        /**
         * Fundamentals Response
         * @description Array of Fundamentals Objects
         */
        FundamentalsResponse: {
            data?: components["schemas"]["Fundamental"][];
        };
        /**
         * Fundamental Object
         * @description FactSet Fundamentals Response item
         */
        Fundamental: {
            /**
             * @description Identifier that was used for the request.
             * @example IBM-US
             */
            requestId?: string;
            /**
             * @description FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
             * @example SJY281-R
             */
            fsymId?: string | null;
            /**
             * @description The requested `metric` input, representing the Fundamental Data Item. For a definition of the item please use the /fundamentals/v#/metrics endpoint.
             * @example FF_SALES
             */
            metric?: string | null;
            /**
             * @description Periodicity or frequency of the fiscal periods, where ANN = Annual Original, ANN_R = Annual Latest, QTR = Quarterly Original, QTR_R = Quarterly Latest, SEMI = Semi-Annual Original, SEMI_R = Semi-Annual Latest, LTM = Last Twelve Months Original, LTM_R = Last Twelve Months Latest, LTMSG = Last Twelve Months Global, [OA17959](https://my.apps.factset.com/oa/pages/17959), LTM_SEMI = Last Twelve Months - Semi-Annual Data, LTM_SEMI_R = Last Twelve Months - Semi-Annual Latest Data and YTD = Year-to-date. Please note that the coverage for SEMI_R and LTM_R may be limited as fewer companies report with these periodicities.
             * @example QTR
             * @enum {string|null}
             */
            periodicity?: "ANN" | "ANN_R" | "QTR" | "QTR_R" | "SEMI" | "SEMI_R" | "CAL" | "LTM" | "LTM_R" | "LTMSG" | "LTM_SEMI" | "LTM_SEMI_R" | "YTD" | null;
            /**
             * @description Fiscal Period indicator. Returns an integer representing the fiscal period for the requested item and periodicity. QUARTERLY CODE: 1-Fist Quarter; 2-Second Quarter; 3-Third Quarter; 4-Fourth Quarter. SEMI-CODE: 1-First Semi-annual Period; 2-Second Semi-annual Period.
             * @example 4
             */
            fiscalPeriod: number | null;
            /**
             * @description Fiscal year of the reported period in YYYY format.
             * @example 2018
             */
            fiscalYear?: number | null;
            /**
             * @description Length of the fiscal period in days.
             * @example 91
             */
            fiscalPeriodLength?: number | null;
            /**
             * Format: date
             * @description The normalized data the fiscal period ended.
             * @example 2017-12-31
             */
            fiscalEndDate?: string | null;
            /**
             * Format: date
             * @description The date the reported fiscal period ended.
             * @example 2017-12-30
             */
            reportDate?: string | null;
            /**
             * Format: date
             * @description The date the EPS was reported for the requested periodicity. In YYYY-MM-DD format. Unavailable data returned as 0001-01-01.
             * @example 2018-02-24
             */
            epsReportDate?: string | null;
            /**
             * @description Update Type: Preliminary - The period is updated from a report that usually contains limited or only key information., Final - The period is updated from a report where detailed information is available in financial statements including the notes to the line items.
             * @example Preliminary
             * @enum {string|null}
             */
            updateType?: "Preliminary" | "Final" | null;
            /**
             * @description Currency code for the data. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
             * @example USD
             */
            currency?: string | null;
            value?: components["schemas"]["FundamentalValue"];
        };
        /** @description Value of the data metric requested. Note that the type of value is 'object', and depending on the data metric requested, the value could be an object representation of a string or double.  */
        FundamentalValue: (string | null) | (number | null);
        /**
         * Segments Request Body
         * @description Segments request body elements
         */
        SegmentsRequest: {
            data: components["schemas"]["SegmentRequestBody"];
        };
        /**
         * Segments Request Body
         * @description Segments request body elements
         */
        SegmentRequestBody: {
            ids: components["schemas"]["IdsBatchMax30000"];
            periodicity?: components["schemas"]["SegmentsPeriodicity"];
            fiscalPeriod?: components["schemas"]["FundamentalFiscalPeriod"];
            metrics: components["schemas"]["SegmentsMetrics"];
            segmentType?: components["schemas"]["SegmentType"];
            batch?: components["schemas"]["Batch"];
        };
        /**
         * Segments Response
         * @description Array of Segments Objects
         */
        SegmentsResponse: {
            data?: components["schemas"]["Segment"][];
        };
        /** Segment Object */
        Segment: {
            /**
             * @description Identifier that was used for the request.
             * @example AAPL-US
             */
            requestId?: string;
            /**
             * @description FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
             * @example MH33D6-R
             */
            fsymId?: string | null;
            /**
             * @description The requested `metric` input, representing the Fundamental Data Item. For a definition of the item please use the /fundamentals/v#/metrics endpoint.
             * @example SALES
             */
            metric?: string | null;
            /**
             * @description Report labels of the segment type requested.
             * @example iPhone
             */
            label: string | null;
            /**
             * Format: date
             * @description Date for the period requested expressed in YYYY-MM-DD format
             * @example 2022-09-30
             */
            date?: string | null;
            value?: components["schemas"]["SegmentValue"];
        };
        /** @description Value of the data metric requested. Note that the type of value is 'object', and depending on the data metric requested, the value could be an object representation of a string or double.  */
        SegmentValue: (string | null) | (number | null);
        /**
         * Financials Response
         * @description Array of financials objects
         */
        FinancialResponse: {
            data?: components["schemas"]["Financials"][];
        };
        Financials: {
            /**
             * @description Identifier that was used for the request.
             * @example IBM-US
             */
            requestId?: string;
            /**
             * @description FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
             * @example SJY281-R
             */
            fsymId?: string | null;
            reportDate?: components["schemas"]["reportDate"][];
            fiscalYear?: components["schemas"]["fiscalYear"][];
            items?: components["schemas"]["Item"][];
        };
        Item: {
            /** @description Name of the metric */
            name?: string;
            /** @description FactSet Fundamental code representing the corresponding financial metric */
            ffCode?: string;
            /** @description Describes the level of displaying the item */
            displayLevel?: string;
            /** @description Describes the order of displaying the item */
            displayOrder?: number;
            value?: (number | null)[];
        };
        /**
         * @description The date the reported fiscal period ended.
         * @example 2017-12-30
         */
        reportDate: string | null;
        /**
         * @description Fiscal year of the reported period in YYYY format.
         * @example 2018
         */
        fiscalYear: string | null;
        /** Profiles Response */
        ProfileResponse: {
            /** @description Array of profile objects */
            data?: components["schemas"]["Profile"][];
        };
        /** Profile Object */
        Profile: {
            /**
             * @description Identifier that was used for the request.
             * @example AAPL-USA
             */
            requestId?: string;
            error?: components["schemas"]["CompanyReportErrorObject"];
            /**
             * @description FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
             * @example SJY281-R
             */
            fsymId?: string | null;
            /**
             * @description FactSet Ticker-Region for the requested security.
             * @example AAPL-US
             */
            tickerRegion?: string | null;
            exchange?: components["schemas"]["Exchange"];
            /**
             * @description Name of the security
             * @example Apple Inc.
             */
            name?: string | null;
            address?: components["schemas"]["Address"];
            /**
             * @description The industry classification for this security. The industry level 5 RBIC (Revere Business Industry Classification) system is used in classification. For more info, visit: [OA page](https://my.apps.factset.com/oa/pages/17498)
             * @example Smart Phone Manufacturing
             */
            industry?: string | null;
            /**
             * @description The sector classification for this security. The sector level 2 RBIC (Revere Business Industry Classification) system is used in classification. For more info, visit: [OA page](https://my.apps.factset.com/oa/pages/17498)
             * @example Hardware
             */
            sector?: string | null;
            /**
             * @description Number of employees working in the company
             * @example 161000
             */
            numberOfEmployees?: number | null;
            /**
             * @description A chief executive officer (CEO) is the highest-ranking executive in a company
             * @example Mr. Timothy Donald Cook
             */
            ceo?: string | null;
            /**
             * @description Summary of the security being requested
             * @example Apple, Inc. engages in the design, manufacture, and sale of smartphones, personal computers, tablets, wearables and accessories, and other varieties of related services. It operates through the following geographical segments: Americas, Europe, Greater China, Japan, and Rest of Asia Pacific. The Americas segment includes North and South America. The Europe segment consists of European countries, as well as India, the Middle East, and Africa. The Greater China segment comprises China, Hong Kong, and Taiwan. The Rest of Asia Pacific segment includes Australia and Asian countries. Its products and services include iPhone, Mac, iPad, AirPods, Apple TV, Apple Watch, Beats products, AppleCare, iCloud, digital content stores, streaming, and licensing services. The company was founded by Steven Paul Jobs, Ronald Gerald Wayne, and Stephen G. Wozniak in April 1976 and is headquartered in Cupertino, CA.
             */
            businessSummary?: string | null;
            /**
             * @description The year this security is founded
             * @example 1976
             */
            yearFounded?: number | null;
            /**
             * Format: int64
             * @description The market capitalization of a company. It is the total value of the company's outstanding shares of common stock
             * @example 26155490220
             */
            marketCapitalization?: number | null;
            /**
             * Format: int64
             * @description The total public shares for the company's listed equity. This aggregates across all share classes, with including non-traded shares.
             * @example 2615545855361
             */
            totalMarketCapitalization?: number | null;
            /**
             * Format: int64
             * @description The number of common shares that a company has issued and are held by investors
             * @example 15441900000
             */
            sharesOutstanding?: number | null;
            /**
             * Format: double
             * @description The price-earnings ratio (P/E ratio) is the ratio for valuing a company that measures its current share price relative to its per-share earnings (EPS)
             * @example 26.8057
             */
            peRatio?: number | null;
        };
        Address: {
            /**
             * @description Street line where the company head quarters are located
             * @example One Apple Park Way
             */
            streetLine1?: string | null;
            /**
             * @description Additional Street line where the company head quarters are located, if available
             * @example Suite 100
             */
            streetLine2?: string | null;
            /**
             * @description City where the company head quarters are located
             * @example Cupertino
             */
            city?: string | null;
            /**
             * @description State code for which state the company head quarters are located
             * @example CA
             */
            state?: string | null;
            /**
             * @description Full State Name of the state where the company head quarters are located
             * @example California
             */
            stateName?: string | null;
            /**
             * @description Full Country Name of the country where the company head quarters are located
             * @example US
             */
            country?: string | null;
            /**
             * @description Zipcode of the city where the company head quarters are located
             * @example 95014-2083
             */
            zip?: string | null;
            /**
             * @description Phone number of the company
             * @example 1.408.996.1010
             */
            phoneNumber?: string | null;
            /**
             * @description Website of the company
             * @example http://www.apple.com
             */
            website?: string | null;
        };
        /** @description The name of the exchange for the security being requested. */
        Exchange: {
            /**
             * @description The id of the exchange.
             * @example NAS
             */
            exchangeId?: string | null;
            /**
             * @description The full name of the exchange.
             * @example NASDAQ
             */
            fullName?: string | null;
        };
        /**
         * Fundamentals Response
         * @description Array of Fundamental objects
         */
        CompanyFundamentalsResponse: {
            data?: components["schemas"]["Fundamentals"][];
        };
        /**
         * Fundamental Object
         * @description Factset Fundamental Response item
         */
        Fundamentals: {
            /**
             * @description Identifier that was used for the request.
             * @example IBM-US
             */
            requestId?: string;
            error?: components["schemas"]["CompanyReportErrorObject"];
            /**
             * @description FactSet Regional Security Identifier. Six alpha-numeric characters, excluding vowels, with an -R suffix (XXXXXX-R). Identifies the security's best regional security data series per currency. For equities, all primary listings per region and currency are allocated a regional-level permanent identifier. The regional-level permanent identifier will be available once a SEDOL representing the region/currency has been allocated and the identifiers are on FactSet.
             * @example SJY281-R
             */
            fsymId?: string | null;
            /**
             * Format: date
             * @description Date on which the specified fundamentals data or information is accurate or relevant.
             * @example 2017-12-30
             */
            asOfDate?: string | null;
            /**
             * @description Currency code for the data. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
             * @example USD
             */
            currency?: string | null;
            /**
             * @description Periodicity or frequency of the fiscal periods.
             * @example ANN
             */
            periodicity?: string | null;
            perShare?: components["schemas"]["PerShare"];
            ratios?: components["schemas"]["Ratios"];
            dividend?: components["schemas"]["Dividend"];
            /**
             * Format: double
             * @description Enterprise Value (EV) is the measure of a company's total value for the period and date(s) requested in local currency by default
             * @example 2989652.948
             */
            enterpriseValue?: number | null;
            /**
             * Format: double
             * @description Average of the dividend yield with yield calculated for each of the past five years
             * @example 5.00195
             */
            fiveYearAverageYield?: number | null;
            /**
             * Format: double
             * @description The dividend growth rate is the annualized percentage rate of growth that a particular stock's dividend undergoes over five years of time
             * @example 6.119162640901776
             */
            fiveYearDividendGrowthRate?: number | null;
            /**
             * Format: double
             * @description Represents the number of shares outstanding less closely held shares for the period and date(s) requested
             * @example 15310.455156
             */
            floatingSharesOutstanding?: number | null;
            /**
             * Format: double
             * @description This equals to net earnings (profit) calculated as sales less cost of goods sold, selling, general and administrative expenses, operating expenses, depreciation, interest, taxes and other expenses
             * @example 23636.001
             */
            netIncome?: number | null;
            /**
             * Format: int32
             * @description Represents the number of employees under the company's payroll as reported by the management to the shareholders within 90 days of the fiscal year-end.
             * @example 311300
             */
            numberOfEmployees?: number | null;
            /**
             * Format: double
             * @description Revenue per employee is a ratio that is calculated as a company's total revenue divided by its current number of employees
             * @example 0.194442659813685
             */
            salesPerEmployee?: number | null;
            /**
             * Format: double
             * @description Shareholder equity represents the amount of financing the company experiences through common and preferred shares
             * @example 73081.001
             */
            shareHolderEquity?: number | null;
            /**
             * Format: double
             * @description Average of the dividend yield with yield calculated for each of the past three years
             * @example 4.916496666666666
             */
            threeYearAverageYield?: number | null;
            /**
             * Format: double
             * @description The dividend growth rate is the annualized percentage rate of growth that a particular stock's dividend undergoes over three years of time
             * @example 1.228878648233489
             */
            threeYearDividendGrowthRate?: number | null;
            /**
             * Format: double
             * @description Total amount of assets owned by entity.
             * @example 129321.001
             */
            totalAssets?: number | null;
            /**
             * Format: double
             * @description Revenue is the amount of money (in Million) that a company actually receives during a specific period, including discounts and deductions for returned merchandise.
             * @example 14752.001
             */
            totalRevenue?: number | null;
        };
        PerShare: {
            /**
             * Format: double
             * @description Book value per common share is a formula used to calculate the per share value of a company based on common shareholders' equity in the company
             * @example 25.27711
             */
            bookValuePerShare?: number | null;
            /**
             * Format: double
             * @description Cash flow per share is calculated as a ratio, indicating the amount of cash a business generates based on a company’s net income with the costs of depreciation and amortization added back
             * @example 10.4268994512216
             */
            cashFlowPerShare?: number | null;
            /**
             * Format: double
             * @description Cash Per Share of Security
             * @example 7.968296945651575
             */
            cashPerShare?: number | null;
            /**
             * Format: double
             * @description Earnings per share (EPS) is the portion of a company's profit allocated to each share of common stock
             * @example 1.8668
             */
            earningsPerShare?: number | null;
            /**
             * Format: double
             * @description The portion of a company's revenue that is allocated to each share of common stock.
             * @example 66.3510388780454
             */
            revenuePerShare?: number | null;
            /**
             * Format: double
             * @description Sales per share is a ratio that computes the total revenue earned per share over a designated period
             * @example 15.9710148599077
             */
            salesPerShare?: number | null;
            /**
             * Format: double
             * @description Earnings per share over the last 12 months.
             * @example 7.621
             */
            trailingTwelveMonthEarningsPerShare?: number | null;
        };
        Ratios: {
            /**
             * Format: double
             * @description The asset turnover ratio measures the value of a company's sales or revenues relative to the value of its assets
             * @example 0.479435359033746
             */
            assetTurnoverRatio?: number | null;
            /**
             * Format: double
             * @description The current ratio is a liquidity ratio that measures a company's ability to pay short-term and long-term obligations. The ratio is calculated by comparing current assets to current liabilities
             * @example 0.874795791674835
             */
            currentRatio?: number | null;
            /**
             * Format: double
             * @description The quick ratio measures the dollar amount of liquid assets available with the company against the dollar amount of its current liabilities
             * @example 0.829085800169901
             */
            quickRatio?: number | null;
            /**
             * Format: double
             * @description EBIT margin is an assessment of a firm's operating profitability as a percentage of its total revenue. It is equal to earnings before interest and tax (EBIT) divided by total revenue
             * @example 16.4113340563991
             */
            ebitMargin?: number | null;
            /**
             * Format: double
             * @description EBITDA margin is an assessment of a firm's operating profitability as a percentage of its total revenue. It is equal to earnings before interest, tax, depreciation and amortization (EBITDA) divided by total revenue
             * @example 23.8204989154013
             */
            ebitdaMargin?: number | null;
            /**
             * Format: double
             * @description Gross profit margin is the proportion of money left over from revenues after accounting for the cost of goods sold, calculated by dividing gross profit by revenues.
             * @example 53.843546637744
             */
            grossMargin?: number | null;
            /**
             * Format: double
             * @description Inventory turnover is a ratio showing how many times a company has sold and replaced inventory during a given period
             * @example 17.6586282492953
             */
            inventoryTurnover?: number | null;
            /**
             * Format: double
             * @description Long-term debt consists of loans and financial obligations lasting over one year. The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities lasting over one year by its shareholder equity
             * @example 2.22278064208656
             */
            longTermDebtToEquity?: number | null;
            /**
             * Format: double
             * @description The dividend payout ratio is the ratio of the total amount of dividends paid out to shareholders relative to the net income of the company
             * @example 89.98265394622723
             */
            payoutRatio?: number | null;
            /**
             * Format: double
             * @description The pretax margin is the ratio of a company's pre-tax earnings to its total sales
             * @example 12.7236984815618
             */
            pretaxMargin?: number | null;
            /**
             * Format: double
             * @description Companies use the price-to-book ratio to compare a firm's market to book value by dividing price per share by book value per share (BVPS) .
             * @example 6.38918
             */
            priceToBookRatio?: number | null;
            /**
             * Format: double
             * @description The price-to-cash flow ratio is a stock valuation indicator or multiple that measures the value of a stock’s price relative to its operating cash flow per share.
             * @example 11.105
             */
            priceToCashFlowRatio?: number | null;
            /**
             * Format: double
             * @description The price-to-earnings ratio (P/E ratio) is the ratio for valuing a company that measures its current share price relative to its per-share earnings
             * @example 21.4293
             */
            priceToEarningsRatio?: number | null;
            /**
             * Format: double
             * @description The price-to-sales ratio (P/S ratio) is a valuation ratio that compares a company’s stock price to its revenues
             * @example 2.43871
             */
            priceToSalesRatio?: number | null;
            /**
             * Format: double
             * @description Return on net assets (RONA) is a measure of financial performance calculated as net income divided by the sum of fixed assets and net working capital
             * @example 5.56332812114229
             */
            returnOnAssets?: number | null;
            /**
             * Format: double
             * @description Return on equity (ROE) is a measure of financial performance calculated as net income divided by shareholders' equity
             * @example 32.8938526774336
             */
            returnOnEquity?: number | null;
            /**
             * Format: double
             * @description Return on Investment (ROI) measures how well an investment is performing
             * @example 10.0320834452249
             */
            returnOnInvestedCapital?: number | null;
            /**
             * Format: double
             * @description The Debt/Equity (D/E) Ratio is calculated by dividing a company’s total liabilities by its shareholder equity
             * @example 2.53563537108444
             */
            totalDebtToEquity?: number | null;
        };
        Dividend: {
            /**
             * Format: double
             * @description Dividend is the distribution of reward from a portion of company's earnings, and is paid to a class of its shareholders each year for every share they own.
             * @example 6.59
             */
            annualDividendPerShare?: number | null;
            /**
             * @description Distribution frequency is how often a dividend is paid by an individual stock, distribution frequency can vary from monthly to annually.
             * @example Quarterly
             */
            distributionFrequency?: string | null;
            /**
             * Format: double
             * @description Dividend is the distribution of reward from a portion of company's earnings, and is paid to a class of its shareholders for every share they own each time the company distributes dividends, which could be quarterly, semi-annually, or annually depending on the company's dividend policy.
             * @example 1.65999997
             */
            dividendPerShare?: number | null;
            /**
             * Format: date
             * @description The date on which the dividend eligibility expires is called the ex-dividend date
             * @example 2017-12-30
             */
            exDividendDate?: string | null;
            /**
             * @description Indicated dividend Rate projects the annual dividend return of a stock based on its most recent dividend, the number of dividends issued each year, and the current share price
             * @example 6.64
             */
            indicativeDividendRate?: string | null;
            /**
             * Format: date
             * @description The company issues the payment of the dividend on the payment date, which is when the money gets credited to investor's account
             * @example 2017-12-30
             */
            payableDate?: string | null;
            /**
             * Format: date
             * @description The record date is the cut-off date in order to determine which shareholders are eligible to receive a dividend or distribution
             * @example 2017-12-30
             */
            recordDate?: string | null;
            /**
             * Format: double
             * @description Dividend yield is the financial ratio that shows how much a company pays out in dividends each year relative to its stock price
             * @example 4.10526
             */
            yield?: number | null;
        };
        /** Metrics Response */
        MetricsResponse: {
            /** @description Array of metric objects representing the metrics that can be requested from the fundamentals APIs.
             *      */
            data?: components["schemas"]["Metric"][];
        };
        /** Metric Object */
        Metric: {
            /**
             * @description Metric identifier to be used as `metrics` input in `/fundamentals/v#/fundamentals` endpoint.
             * @example FF_ASSETS
             */
            metric?: string | null;
            /**
             * @description Plain text name of the metric.
             * @example Total Assets
             */
            name?: string | null;
            /**
             * @description Primary Category of metric item, such as, INCOME_STATEMENT, BALANCE_SHEET, CASH_FLOW, or RATIOS.
             * @example BALANCE_SHEET
             */
            category?: string | null;
            /**
             * @description Sub-category of metric item, such as ASSETS, SUPPLEMENTAL, SHAREHOLDERS_EQUITY, VALUATION, PROFITABILITY, etc.
             * @example ASSETS
             */
            subcategory?: string | null;
            /**
             * @description The Online Assistant Page ID in D***** format, used to look up the definition and methodology of the requested item. Visit my.apps.factset.com/oa/pages/[D*****] for details. For example, https://my.apps.factset.com/oa/pages/D10585 will give you the definition for FF_SALES.
             * @example D10585
             */
            oaPageId?: string | null;
            /**
             * @description Description of the metric item.
             * @example Total Assets
             *
             *     Total Assets
             *
             *     Page: D10585Library: FactSet Fundamentals
             *
             *     Category: Balance Sheet/Assets
             *
             *     Units:Millions
             *
             *     Annual and Interim items - All Industries
             *
             *     Represents as reported total value of resources the company is using for its operations. Company assets are expected to provide future economic benefits in the entire course of business. Most of these are convertible into cash which can be used to cover any obligations. Thus, this is equal to the company&rsquo;s liabilities and total equity.
             *
             *     It includes:
             *     -  Negative Goodwill
             *
             *     -  Goodwill (reported as part of Liabilities)
             *
             *     -  Due to associated companies
             *
             *     -  Subscription receivable
             *
             *     -  Deferred tax assets
             *
             *     -  Advances on export contracts (reported as deduction within Receivables by Brazilian companies)
             *
             *     It excludes:
             *     -  Own shares
             *
             *     -  Unrealized foreign exchange loss
             *
             *     -  Retained losses (reported as part of Assets)
             *
             *     -  Uncalled capital
             *
             *     This will be equal to the as reported total assets value if the items stated above are not reported.
             */
            description?: string | null;
            /**
             * @description The Online Assistant Page URL, is used to look up the definition and methodology of the requested item. For example, https://my.apps.factset.com/oa/pages/D10585 will give you the definition for FF_SALES.
             * @example https://my.apps.factset.com/oa/pages/D10585
             */
            oaUrl?: string | null;
            /**
             * @description The factor for the metric (e.g. 1000 = thousands).
             * @example 1000000
             */
            factor?: number | null;
            /**
             * @description An indicator for which Standard Data Feed (SDF) package the item is available in - BASIC or ADVANCED. A null value represents items available only in API.
             * @example BASIC
             * @enum {string|null}
             */
            sdfPackage?: "BASIC" | "ADVANCED" | null;
            /**
             * @description The data type for the metric. Make note, mixing data types within a single /fundamentals API is not supported. Each dataType is defined below -
             *       * **date** - date format expressed in YYYY-MM-DD.
             *       * **doubleArray** - A double is a FactSet data type, similar to a float or an integer. A double represents numeric data but provides a greater amount of decimal precision than the float data type. Double values have up to 15 digits of precision, while float values have up to 7 digits (integers have up to 10 digits).
             *       * **float** - A float value is a real number (i.e., a number that can contain a fractional part/decimals). A float value has a precision of up to seven digits and accurately represents numbers whose absolute value is less than 16,277,216 (224). An example metric includes
             *       * **floatArray** - Function will hold data for multiple periods, as well as for many companies (i.e., two-dimensional value). The FLOATARRAY function returns data using a vertical orientation (e.g., down a column). The difference between FLOAT and FLOATARRAY is that FLOAT can only go across a row (one-dimension; horizontal orientation; vertical length=1) whereas FLOATARRAY will return data both across a row and down a column (two-dimensions; vertical orientation). With FLOATARRAY, the number of data points across a row will correspond to the number of companies queried; the number of data points down a column will correspond to the length of the time series.
             *       * **intArray** - An integer is a whole number or zero (i.e., integers do not include decimals). Integers can be positive or negative.
             *       * **string** - A string value is an ASCII character. A string is a sequence of ASCII characters. String value and text value are synonymous. The function will hold data for multiple time periods, as well as for many companies (i.e., two-dimensional value). The STRING_ARRAY function returns data using a vertical orientation (e.g., down a column)
             *       * **stringArray** - The difference between STRING and STRINGARRAY is that STRING can only go across a row (one-dimension; horizontal orientation; vertical length=1) whereas STRINGARRAY will return data both across a row and down a column (two-dimensions; vertical orientation). With STRINGARRAY, the number of data points across a row will correspond to the number of companies queried; the number of data points down a column will correspond to the length of the time series.
             *
             * @example doubleArray
             */
            dataType?: string | null;
        };
        /**
         * @description The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids.
         *     <p>ids limit =  250 per non-batch request (1 metric per ID, for 1 day) and 5000 per batch request (1 metric per ID, for 1 day).</p>
         *
         * @example [
         *       "FDS-US"
         *     ]
         */
        IdsBatchMax30000: string[];
        /**
         * Periodicity
         * @description Periodicity or frequency of the fiscal periods, where
         *       * **ANN** = Annual Original,
         *       * **ANN_R** = Annual Latest - *Includes Restatements*,
         *       * **QTR** = Quarterly,
         *       * **QTR_R** = Quarterly Latest - *Includes Restatements*,
         *       * **SEMI** = Semi-Annual,
         *       * **SEMI_R** = Semi-Annual Latest - *Includes Restatements*,
         *       * **LTM** = Last Twelve Months,
         *       * **LTM_R** = Last Twelve Months Latest - *Includes Restatements*,
         *       * **LTM_SEMI** = Last Twelve Months - Semi-Annually Reported Data,
         *       * **LTM_SEMI_R** = Last Twelve Months - Semi-Annual Latest - *Includes Restatements*,
         *       * **LTMSG** = Last Twelve Months Global [OA17959](https://my.apps.factset.com/oa/pages/17959) and
         *       * **YTD** = Year-to-date
         *     <br><br>
         *     Please note that the coverage for SEMI_R and LTM_R may be limited as fewer companies report with these periodicities.
         *
         * @default ANN
         * @example QTR
         * @enum {string}
         */
        Periodicity: "ANN" | "ANN_R" | "QTR" | "QTR_R" | "SEMI" | "SEMI_R" | "LTM" | "LTM_R" | "LTMSG" | "LTM_SEMI" | "LTM_SEMI_R" | "YTD";
        /**
         * Periodicity
         * @description Periodicity or frequency of the fiscal periods, where
         *       * **ANN** = Annual Original,
         *       * **ANN_R** = Annual Latest - *Includes Restatements*,
         *
         * @default ANN
         * @example ANN
         * @enum {string}
         */
        SegmentsPeriodicity: "ANN" | "ANN_R";
        FundamentalFiscalPeriod: components["schemas"]["FiscalPeriod"];
        FiscalPeriod: {
            /**
             * @description The fiscal period start expressed as YYYY-MM-DD.  Calendar date that will fall back to the most recently completed period during resolution.
             *
             * @example 2012-01-01
             */
            start?: string;
            /**
             * @description The fiscal period end expressed YYYY-MM-DD.  Calendar date that will fall back to the most recent completed period during resolution.
             *
             * @example 2014-01-01
             */
            end?: string;
        };
        /**
         * Metrics
         * @description Requested List of Financial Statement Items or Ratios. Use /metrics endpoint for a complete list of available FF_* metric items.
         *
         * @example [
         *       "FF_SALES"
         *     ]
         */
        Metrics: string[];
        /**
         * Metrics
         * @description Metrics are the data items available for business and geographic segments, where
         *       * **SALES**  = Sales/Revenue - Total revenues from the business line/geographic region,
         *       * **OPINC** = Operating Income/Loss - Operating income generated from the business line/geographic region,
         *       * **ASSETS** = Total Assets - Total assets from the business line/geographic region,
         *       * **DEP** = Depreciation Exp - Depreciation expense resulting from the business line/geographic segment,
         *       * **CAPEX** = Capital Expenditures - Capital expenditures resulting from the business line/geographic region
         *
         * @example SALES
         */
        SegmentsMetrics: string;
        /**
         * segmentType
         * @description Segment type for the metrics, where
         *       * **BUS**  = Business,
         *       * **GEO** = Geographic
         *
         * @default BUS
         * @example BUS
         * @enum {string}
         */
        SegmentType: "BUS" | "GEO";
        /**
         * Currency
         * @description Currency code for currency values. For a list of currency ISO codes, visit [Online Assistant Page #1470](https://oa.apps.factset.com/pages/1470).
         *
         * @default LOCAL
         * @example USD
         */
        Currency: string;
        /**
         * Update Type
         * @description Update Status flag:
         *       * **RP** = Include preliminary data,
         *       * **RF** = Only final data
         *
         * @default RP
         * @example RP
         * @enum {string}
         */
        UpdateType: "RP" | "RF";
        /**
         * @description Enables the ability to asynchronously "batch" the request, supporting a long-running request for up to 20 minutes. Upon requesting batch=Y, the service will respond back with an HTTP Status Code of 202. Once a batch request is submitted, use batch status to see if the job has been completed. Once completed, retrieve the results of the request via batch-result. When using Batch, id limit is set to 5000 ids per request (1 metric per ID, for 1 day) and 250 ids per request without batching (1 metric per ID, for 1 day) though limits on query string via GET method still apply. It's advised to submit large lists of ids via POST method.
         *
         * @default N
         * @enum {string}
         */
        Batch: "Y" | "N";
        /** Batch Status Response */
        BatchStatusResponse: {
            data?: components["schemas"]["BatchStatus"];
        };
        /** Batch Status */
        BatchStatus: {
            /**
             * Format: uuid
             * @description the id of batch request.
             */
            id?: string;
            /**
             * Format: date-time
             * @description Time when the batch request is started. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
             */
            startTime?: string;
            /**
             * Format: date-time
             * @description Time when the batch request is ended. This is in Eastern Time Zone. The date-time format is expressed as [YYYY-MM-DD]T[HH:MM:SSS], following ISO 8601.
             */
            endTime?: string | null;
            /** @enum {string} */
            status?: "queued" | "executing" | "created" | "failed";
            error?: components["schemas"]["BatchErrorObject"];
        };
        /** Batch Data Response */
        BatchResultResponse: {
            data: components["schemas"]["BatchResult"][];
        };
        /** Batch Data */
        BatchResult: components["schemas"]["Fundamental"] | components["schemas"]["Segment"];
        /**
         * Error Response
         * @description Error Default Response
         */
        ErrorResponse: {
            /** @description An array containing errors */
            errors?: components["schemas"]["ErrorObject"][];
        };
        ErrorObject: {
            /**
             * Format: uuid
             * @description A UUID for this particular occurrence of the problem.
             * @example adb01824-252f-4420-b0c6-35a1e3507ef5
             */
            id?: string;
            /**
             * @description status
             * @example Bad Request
             */
            code?: string;
            /** @description The Endpoint path {package}/version/{endpoint} */
            links?: {
                /**
                 * @description details.
                 * @example /factset-fundamentals/v2/{endpoint}
                 */
                about?: string;
            };
            /**
             * @description The plain text error message
             * @example Validation Error
             */
            title?: string;
        };
        BatchErrorObject: {
            /**
             * @description A UUID for this particular occurrence of the problem.
             * @example adb01824-252f-4420-b0c6-35a1e3507ef5
             */
            id?: string;
            /**
             * @description status
             * @example GenericError
             */
            code?: string;
            /**
             * @description The plain text error message
             * @example Validation Error
             */
            title?: string;
        } | null;
        CompanyReportErrorObject: {
            /**
             * @description status
             * @example Bad Request
             */
            code?: string;
            /**
             * @description The plain text error message
             * @example Invalid Parameter
             */
            title?: string;
            /**
             * @description Error details explanation
             * @example The parameter 'ids' should be valid and may not be empty.
             */
            detail?: string;
        };
    };
    responses: {
        /** @description Bad Request. This can occur for several reasons. Please review the "message" for more details. */
        400: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description Unauthenticated USERNAME-SERIAL. Ensure you are logged in and have successfully generated an API KEY for the IP range you are connecting from. For more help, select the **Report Issue** in the top right corner of this Developer Portal specification card and choose Connectivity 401 or 403 Responses. */
        401: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description The USERNAME-SERIAL attempted to request the endpoint is not authorized to access. The request was legal, but the server is refusing to respond. Please reach out to FactSet Account Team for assistance with authorization. */
        403: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description Resource not found. */
        404: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description Unsupported Media Type. This error may be returned when the caller sends a resource in a format that is not accepted by the server. This can be fixed by ensuring that the Content-Type header is set to the correct value. In this instance, "application/json" would be the appropriate value. */
        415: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description Internal Server Error. */
        500: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description Bad Request. This can occur for several reasons. Please review the "message" for more details. */
        Company400: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
    };
    parameters: {
        /** @description Returns a list of security identifiers. Accepted ID types include Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids.<p>ids limit = 250 IDs per non-batch request (1 metric per ID, for 1 day) and 2000 IDs per batch request (1 metric per ID, for 1 day)</p> *<p>Make note, GET Method URL request lines are also limited to a total length of 8192 bytes (8 KB). In cases where your request—non-batch or batch—approaches this size, it’s advised to use the respective “POST” method to avoid URL-length constraints.</p>* */
        idsBatchMax2000: string[];
        /** @description Periodicity or frequency of the fiscal periods, where
         *       * **ANN**  = Annual - Original,
         *       * **ANN_R** = Annual - Latest - *Includes Restatements*,
         *       * **QTR**  = Quarterly - Original,
         *       * **QTR_R** = Quarterly - Latest - *Includes Restatements*,
         *       * **SEMI** = Semi-Annual,
         *       * **SEMI_R** = Semi-Annual - Latest - *Includes Restatements*,
         *       * **LTM**  = Last Twelve Months,
         *       * **LTM_R**  = Last Twelve Months - Latest - *Includes Restatements*,
         *       * **LTMSG** = Last Twelve Months Global [OA17959](https://my.apps.factset.com/oa/pages/17959),
         *       * **LTM_SEMI**  = Last Twelve Months, Semi-Annually Reported Data,
         *       * **LTM_SEMI_R**  = Last Twelve Months, Semi-Annual - Latest - *Includes Restatements*,
         *       * **YTD** = Year-to-date.
         *       <br>
         *
         *     Please note that the coverage for SEMI_R and LTM_R may be limited as fewer companies report with these periodicities.<br>
         *      */
        periodicity: "ANN" | "ANN_R" | "QTR" | "QTR_R" | "SEMI" | "SEMI_R" | "LTM" | "LTM_R" | "LTM_SEMI" | "LTM_SEMI_R" | "LTMSG" | "YTD";
        /** @description Periodicity or frequency of the fiscal periods, where
         *       * **ANN**  = Annual - Original,
         *       * **ANN_R** = Annual - Latest - *Includes Restatements*,
         *       * **QTR**  = Quarterly - Original,
         *       * **QTR_R** = Quarterly - Latest - *Includes Restatements*,
         *       * **SEMI** = Semi-Annual,
         *       * **SEMI_R** = Semi-Annual - Latest - *Includes Restatements*,
         *       * **LTM**  = Last Twelve Months,
         *       * **YTD** = Year-to-date.
         *       <br>
         *
         *     Please note that the coverage for SEMI_R may be limited as fewer companies report with this periodicity.<br>
         *      */
        financialPeriodicity: "ANN" | "ANN_R" | "QTR" | "QTR_R" | "SEMI" | "SEMI_R" | "LTM" | "YTD";
        /** @description Periodicity or frequency of the fiscal periods. If not specified, default will be empty, which will return the latest available data irrespective of the periodicity.
         *       * **ANN**  = Annual - Original,
         *       * **QTR**  = Quarterly - Original
         *       * **SEMI** = Semi-Annual
         *      */
        fundamentalPeriodicity: "ANN" | "QTR" | "SEMI";
        /** @description Periodicity or frequency of the fiscal periods, where
         *       * **ANN**  = Annual - Original,
         *       * **ANN_R** = Annual - Latest - *Includes Restatements*
         *      */
        segmentsPeriodicity: "ANN" | "ANN_R";
        /** @description The type of financial statement being requested. */
        statementType: "BS" | "CF" | "IS";
        /** @description The requested security identifier. Accepted ID types include Market Ticker, SEDOL, ISIN, CUSIP, or FactSet Permanent Id. */
        identifier: string;
        /** @description The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids. <p>***ids limit** =  50 per request*</p>
         *      */
        ids: string[];
        /** @description The fiscal period start expressed as YYYY-MM-DD.  Calendar date that will fall back to the most recent completed period during resolution.
         *      */
        fiscalPeriodStart: string;
        /** @description The fiscal period end expressed YYYY-MM-DD.  Calendar date that will fall back to the most recently completed period during resolution.
         *      */
        fiscalPeriodEnd: string;
        /** @description Requested List of Financial Statement Items or Ratios. Use /metrics endpoint for a complete list of available FF_* metric items. <p>*When requesting multiple metrics, you cannot mix metric data types (e.g. strings and floats). Please use /metrics endpoints for context on metric dataType to avoid null data.*</p> <p>***metrics limit** =  1600 per request*</p>
         *     *<p>Make note, GET Method URL request lines are also limited to a total
         *     length of 8192 bytes (8KB). In cases where the service allows for thousands
         *     of metrics, which may lead to exceeding this request line limit of 8KB, its
         *     advised for any requests with large request lines to be requested through
         *     the respective "POST" method.</p>*
         *      */
        metrics: string[];
        /** @description Metrics are the data items available for business and geographic segments, where
         *       * **SALES**  = Sales/Revenue - Total revenues from the business line/geographic region,
         *       * **OPINC** = Operating Income/Loss - Operating income generated from the business line/geographic region,
         *       * **ASSETS** = Total Assets - Total assets from the business line/geographic region,
         *       * **DEP** = Depreciation Exp - Depreciation expense resulting from the business line/geographic segment,
         *       * **CAPEX** = Capital Expenditures - Capital expenditures resulting from the business line/geographic region
         *      */
        segmentsMetrics: "SALES" | "OPINC" | "ASSETS" | "DEP" | "CAPEX";
        /** @description Segment type for the metrics, where
         *       * **BUS**  = Business,
         *       * **GEO** = Geographic
         *      */
        segmentType: "BUS" | "GEO";
        /** @description Enables the ability to asynchronously "batch" the request, supporting a long-running request for up to 20 minutes. Upon requesting batch=Y, the service will respond with an HTTP Status Code of 202.
         *     Once a batch request is submitted, use batch status to see if the job has been completed. Once completed, retrieve the results of the request via batch-result. When using Batch, id limit is set to 2000 ids per request (1 metric per ID, for 1 day) and 250 ids per request without batching (1 metric per ID, for 1 day) though limits on query string via GET method still apply. It's advised to submit large lists of ids via POST method.
         *      */
        batch: "Y" | "N";
        /** @description Batch Request identifier. */
        batchId: string;
        /** @description Currency code for currency values. For a list of currency ISO codes, visit Online Assistant Page [OA1470](https://my.apps.factset.com/oa/pages/1470).
         *
         *     Giving input as "DOC" would give the values in reporting currency for the requested ids.
         *      */
        currency: string;
        /** @description Update Status Flag:
         *       * **RP** = Include preliminary data,
         *       * **RF** = Only final data
         *      */
        updateType: "RP" | "RF";
        /** @description The time period for the returned data. Within range of 1 to 100. If not specified default will be 4. */
        limit: number;
        /** @description Filters the list of FF_* metrics by major category -
         *       * **INCOME_STATEMENT** = Income Statement line items, such as Sales, Gross Profit, Net Income.
         *       * **BALANCE_SHEET** = Balance Sheet line items, such as Assets, Liabilities, and Shareholders Equity.
         *       * **CASH_FLOW** = Cash Flow Statement line items, such as Financing activities, Operation, and Per Share.
         *       * **RATIOS** = Pre-calculated Ratios, including Financial, Growth Rates, Profitability, Liquidity, Size, and Valuation.
         *       * **FINANCIAL_SERVICES** = Financial Statement Items modified for Financial Services companies.
         *       * **INDUSTRY_METRICS** = Industry Specific Line Items or Modifications. View subcategory for list of Industries.
         *       * **PENSION_AND_POSTRETIREMENT** = Accumulated Pension Benefit Obligations and related data.
         *       * **MARKET_DATA** = General Market Data, such as Shares Outstanding. *Note - /factset-prices/prices/ endpoints may be better suited for pricing-related market data.*
         *       * **MISCELLANEOUS** = Corporation Data, Financial Records details, Indicators.
         *       * **DATES** = Relevant Dates
         *      */
        category: "INCOME_STATEMENT" | "BALANCE_SHEET" | "CASH_FLOW" | "RATIOS" | "FINANCIAL_SERVICES" | "INDUSTRY_METRICS" | "PENSION_AND_POSTRETIREMENT" | "MARKET_DATA" | "MISCELLANEOUS" | "DATES";
        /** @description Sub-Category Filter for the Primary Category Requested. Choose a related sub-category for the Category requested-
         *       * **INCOME_STATEMENT** - INCOME_STATEMENT, NON-OPERATING, PER_SHARE, SUPPLEMENTAL, EXPENSES, OPERATING_COST, NON-RECURRING_ITEMS, REVENUES, OTHER
         *       * **BALANCE_SHEET** - ASSETS, BALANCE_SHEET, HEALTHCARE, LIABILITIES, PER_SHARE, SHAREHOLDERS_EQUITY, SUPPLEMENTAL
         *       * **CASH_FLOW** - CASH_FLOW, CHANGE_IN_CASH, FINANCING, INVESTING, OPERATING, PER_SHARE, SUPPLEMENTAL, FINANCING_ACTIVITIES, OPERATING_ACTIVITIES, INVESTING_ACTIVITIES
         *       * **RATIOS** - FINANCIAL, GROWTH_RATE, LIQUIDITY, PROFITABILITY, SIZE, VALUATION
         *       * **FINANCIAL_SERVICES** - BALANCE_SHEET, INCOME_STATEMENT, SUPPLEMENTAL
         *       * **INDUSTRY_METRICS** - AIRLINES, BANKING, HOTELS_AND_GAMING, METALS_AND_MINING, OIL_AND_GAS, PHARMACEUTICAL, REIT, RETAIL, BANK, INSURANCE, UTILITY
         *       * **PENSION_AND_POSTRETIREMENT** - PENSION_AND_POSTRETIREMENT
         *       * **MARKET_DATA** - MARKET_DATA
         *       * **MISCELLANEOUS** - CLASSIFICATION, CORPORATE_DATA, FINANCIAL_RECORDS, INDICATOR, EMPLOYEES_AND_MANAGEMENT
         *       * **DATES** - DATES
         *      */
        subcategory: "ASSETS" | "BALANCE_SHEET" | "HEALTHCARE" | "LIABILITIES" | "PER_SHARE" | "SHAREHOLDERS_EQUITY" | "SUPPLEMENTAL" | "CASH_FLOW" | "CHANGE_IN_CASH" | "FINANCING" | "INVESTING" | "OPERATING" | "DATES" | "INCOME_STATEMENT" | "NON-OPERATING" | "RETAIL" | "AIRLINES" | "BANK" | "BANKING" | "HOTELS_AND_GAMING" | "METALS_AND_MINING" | "OIL_AND_GAS" | "PHARMACEUTICAL" | "REIT" | "MARKET_DATA" | "CLASSIFICATION" | "CORPORATE_DATA" | "FINANCIAL_RECORDS" | "INDICATOR" | "EMPLOYEES_AND_MANAGEMENT" | "PENSION_AND_POSTRETIREMENT" | "FINANCIAL" | "GROWTH_RATE" | "LIQUIDITY" | "PROFITABILITY" | "SIZE" | "VALUATION" | "OTHER" | "HOMEBUILDING" | "NET_INCOME" | "TELECOM" | "UTILITY" | "INSURANCE" | "EXPENSES" | "OPERATING_COST" | "OPERATING_ACTIVITIES" | "NON-RECURRING_ITEMS" | "FINANCING_ACTIVITIES" | "INVESTING_ACTIVITIES" | "REVENUES";
        /** @description Returns general data type of the metrics like integer, float or strings, when left blankmetrics with all data types would be returned
         *      */
        metricDataType: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getFdsFundamentals: {
        parameters: {
            query: {
                /** @description Returns a list of security identifiers. Accepted ID types include Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids.<p>ids limit = 250 IDs per non-batch request (1 metric per ID, for 1 day) and 2000 IDs per batch request (1 metric per ID, for 1 day)</p> *<p>Make note, GET Method URL request lines are also limited to a total length of 8192 bytes (8 KB). In cases where your request—non-batch or batch—approaches this size, it’s advised to use the respective “POST” method to avoid URL-length constraints.</p>* */
                ids: components["parameters"]["idsBatchMax2000"];
                /** @description Periodicity or frequency of the fiscal periods, where
                 *       * **ANN**  = Annual - Original,
                 *       * **ANN_R** = Annual - Latest - *Includes Restatements*,
                 *       * **QTR**  = Quarterly - Original,
                 *       * **QTR_R** = Quarterly - Latest - *Includes Restatements*,
                 *       * **SEMI** = Semi-Annual,
                 *       * **SEMI_R** = Semi-Annual - Latest - *Includes Restatements*,
                 *       * **LTM**  = Last Twelve Months,
                 *       * **LTM_R**  = Last Twelve Months - Latest - *Includes Restatements*,
                 *       * **LTMSG** = Last Twelve Months Global [OA17959](https://my.apps.factset.com/oa/pages/17959),
                 *       * **LTM_SEMI**  = Last Twelve Months, Semi-Annually Reported Data,
                 *       * **LTM_SEMI_R**  = Last Twelve Months, Semi-Annual - Latest - *Includes Restatements*,
                 *       * **YTD** = Year-to-date.
                 *       <br>
                 *
                 *     Please note that the coverage for SEMI_R and LTM_R may be limited as fewer companies report with these periodicities.<br>
                 *      */
                periodicity?: components["parameters"]["periodicity"];
                /** @description The fiscal period start expressed as YYYY-MM-DD.  Calendar date that will fall back to the most recent completed period during resolution.
                 *      */
                fiscalPeriodStart?: components["parameters"]["fiscalPeriodStart"];
                /** @description The fiscal period end expressed YYYY-MM-DD.  Calendar date that will fall back to the most recently completed period during resolution.
                 *      */
                fiscalPeriodEnd?: components["parameters"]["fiscalPeriodEnd"];
                /** @description Requested List of Financial Statement Items or Ratios. Use /metrics endpoint for a complete list of available FF_* metric items. <p>*When requesting multiple metrics, you cannot mix metric data types (e.g. strings and floats). Please use /metrics endpoints for context on metric dataType to avoid null data.*</p> <p>***metrics limit** =  1600 per request*</p>
                 *     *<p>Make note, GET Method URL request lines are also limited to a total
                 *     length of 8192 bytes (8KB). In cases where the service allows for thousands
                 *     of metrics, which may lead to exceeding this request line limit of 8KB, its
                 *     advised for any requests with large request lines to be requested through
                 *     the respective "POST" method.</p>*
                 *      */
                metrics: components["parameters"]["metrics"];
                /** @description Currency code for currency values. For a list of currency ISO codes, visit Online Assistant Page [OA1470](https://my.apps.factset.com/oa/pages/1470).
                 *
                 *     Giving input as "DOC" would give the values in reporting currency for the requested ids.
                 *      */
                currency?: components["parameters"]["currency"];
                /** @description Update Status Flag:
                 *       * **RP** = Include preliminary data,
                 *       * **RF** = Only final data
                 *      */
                updateType?: components["parameters"]["updateType"];
                /** @description Enables the ability to asynchronously "batch" the request, supporting a long-running request for up to 20 minutes. Upon requesting batch=Y, the service will respond with an HTTP Status Code of 202.
                 *     Once a batch request is submitted, use batch status to see if the job has been completed. Once completed, retrieve the results of the request via batch-result. When using Batch, id limit is set to 2000 ids per request (1 metric per ID, for 1 day) and 250 ids per request without batching (1 metric per ID, for 1 day) though limits on query string via GET method still apply. It's advised to submit large lists of ids via POST method.
                 *      */
                batch?: components["parameters"]["batch"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Fundamental data items */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FundamentalsResponse"];
                };
            };
            /** @description Batch request has been accepted. */
            202: {
                headers: {
                    /**
                     * @description Path to Batch Request status.
                     * @example batch-status?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
                     */
                    Location?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BatchStatusResponse"];
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            403: components["responses"]["403"];
            415: components["responses"]["415"];
            500: components["responses"]["500"];
        };
    };
    getFdsFundamentalsForList: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Request object for requesting fundamentals data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["FundamentalsRequest"];
            };
        };
        responses: {
            /** @description Fundamental data items */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FundamentalsResponse"];
                };
            };
            /** @description Batch request has been accepted. */
            202: {
                headers: {
                    /**
                     * @description Path to Batch Request status.
                     * @example batch-status?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
                     */
                    Location?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BatchStatusResponse"];
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            403: components["responses"]["403"];
            415: components["responses"]["415"];
            500: components["responses"]["500"];
        };
    };
    getFdsSegments: {
        parameters: {
            query: {
                /** @description Returns a list of security identifiers. Accepted ID types include Market Tickers, SEDOLs, ISINs, CUSIPs, or FactSet Permanent Ids.<p>ids limit = 250 IDs per non-batch request (1 metric per ID, for 1 day) and 2000 IDs per batch request (1 metric per ID, for 1 day)</p> *<p>Make note, GET Method URL request lines are also limited to a total length of 8192 bytes (8 KB). In cases where your request—non-batch or batch—approaches this size, it’s advised to use the respective “POST” method to avoid URL-length constraints.</p>* */
                ids: components["parameters"]["idsBatchMax2000"];
                /** @description Periodicity or frequency of the fiscal periods, where
                 *       * **ANN**  = Annual - Original,
                 *       * **ANN_R** = Annual - Latest - *Includes Restatements*
                 *      */
                periodicity?: components["parameters"]["segmentsPeriodicity"];
                /** @description The fiscal period start expressed as YYYY-MM-DD.  Calendar date that will fall back to the most recent completed period during resolution.
                 *      */
                fiscalPeriodStart?: components["parameters"]["fiscalPeriodStart"];
                /** @description The fiscal period end expressed YYYY-MM-DD.  Calendar date that will fall back to the most recently completed period during resolution.
                 *      */
                fiscalPeriodEnd?: components["parameters"]["fiscalPeriodEnd"];
                /** @description Metrics are the data items available for business and geographic segments, where
                 *       * **SALES**  = Sales/Revenue - Total revenues from the business line/geographic region,
                 *       * **OPINC** = Operating Income/Loss - Operating income generated from the business line/geographic region,
                 *       * **ASSETS** = Total Assets - Total assets from the business line/geographic region,
                 *       * **DEP** = Depreciation Exp - Depreciation expense resulting from the business line/geographic segment,
                 *       * **CAPEX** = Capital Expenditures - Capital expenditures resulting from the business line/geographic region
                 *      */
                metrics: components["parameters"]["segmentsMetrics"];
                /** @description Segment type for the metrics, where
                 *       * **BUS**  = Business,
                 *       * **GEO** = Geographic
                 *      */
                segmentType?: components["parameters"]["segmentType"];
                /** @description Enables the ability to asynchronously "batch" the request, supporting a long-running request for up to 20 minutes. Upon requesting batch=Y, the service will respond with an HTTP Status Code of 202.
                 *     Once a batch request is submitted, use batch status to see if the job has been completed. Once completed, retrieve the results of the request via batch-result. When using Batch, id limit is set to 2000 ids per request (1 metric per ID, for 1 day) and 250 ids per request without batching (1 metric per ID, for 1 day) though limits on query string via GET method still apply. It's advised to submit large lists of ids via POST method.
                 *      */
                batch?: components["parameters"]["batch"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Segment data items */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SegmentsResponse"];
                };
            };
            /** @description Batch request has been accepted. */
            202: {
                headers: {
                    /**
                     * @description Path to Batch Request status.
                     * @example batch-status?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
                     */
                    Location?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BatchStatusResponse"];
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            403: components["responses"]["403"];
            415: components["responses"]["415"];
            500: components["responses"]["500"];
        };
    };
    getFdsSegmentsForList: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Request object for requesting segments data */
        requestBody: {
            content: {
                "application/json": components["schemas"]["SegmentsRequest"];
            };
        };
        responses: {
            /** @description Segment data items */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SegmentsResponse"];
                };
            };
            /** @description Batch request has been accepted. */
            202: {
                headers: {
                    /**
                     * @description Path to Batch Request status.
                     * @example batch-status?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
                     */
                    Location?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BatchStatusResponse"];
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            403: components["responses"]["403"];
            415: components["responses"]["415"];
            500: components["responses"]["500"];
        };
    };
    getFinancials: {
        parameters: {
            query: {
                /** @description The type of financial statement being requested. */
                statementType: components["parameters"]["statementType"];
                /** @description The requested security identifier. Accepted ID types include Market Ticker, SEDOL, ISIN, CUSIP, or FactSet Permanent Id. */
                id: components["parameters"]["identifier"];
                /** @description Periodicity or frequency of the fiscal periods, where
                 *       * **ANN**  = Annual - Original,
                 *       * **ANN_R** = Annual - Latest - *Includes Restatements*,
                 *       * **QTR**  = Quarterly - Original,
                 *       * **QTR_R** = Quarterly - Latest - *Includes Restatements*,
                 *       * **SEMI** = Semi-Annual,
                 *       * **SEMI_R** = Semi-Annual - Latest - *Includes Restatements*,
                 *       * **LTM**  = Last Twelve Months,
                 *       * **YTD** = Year-to-date.
                 *       <br>
                 *
                 *     Please note that the coverage for SEMI_R may be limited as fewer companies report with this periodicity.<br>
                 *      */
                periodicity: components["parameters"]["financialPeriodicity"];
                /** @description Currency code for currency values. For a list of currency ISO codes, visit Online Assistant Page [OA1470](https://my.apps.factset.com/oa/pages/1470).
                 *
                 *     Giving input as "DOC" would give the values in reporting currency for the requested ids.
                 *      */
                currency?: components["parameters"]["currency"];
                /** @description Update Status Flag:
                 *       * **RP** = Include preliminary data,
                 *       * **RF** = Only final data
                 *      */
                updateType?: components["parameters"]["updateType"];
                /** @description The time period for the returned data. Within range of 1 to 100. If not specified default will be 4. */
                limit?: components["parameters"]["limit"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Financial data items */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FinancialResponse"];
                };
            };
            400: components["responses"]["Company400"];
            401: components["responses"]["401"];
            403: components["responses"]["403"];
            500: components["responses"]["500"];
        };
    };
    getFdsProfiles: {
        parameters: {
            query: {
                /** @description The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids. <p>***ids limit** =  50 per request*</p>
                 *      */
                ids: components["parameters"]["ids"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Profile data items */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProfileResponse"];
                };
            };
            400: components["responses"]["Company400"];
            401: components["responses"]["401"];
            403: components["responses"]["403"];
            500: components["responses"]["500"];
        };
    };
    getFundamentals: {
        parameters: {
            query: {
                /** @description The requested list of security identifiers. Accepted ID types include Market Tickers, SEDOL, ISINs, CUSIPs, or FactSet Permanent Ids. <p>***ids limit** =  50 per request*</p>
                 *      */
                ids: components["parameters"]["ids"];
                /** @description Currency code for currency values. For a list of currency ISO codes, visit Online Assistant Page [OA1470](https://my.apps.factset.com/oa/pages/1470).
                 *
                 *     Giving input as "DOC" would give the values in reporting currency for the requested ids.
                 *      */
                currency?: components["parameters"]["currency"];
                /** @description Periodicity or frequency of the fiscal periods. If not specified, default will be empty, which will return the latest available data irrespective of the periodicity.
                 *       * **ANN**  = Annual - Original,
                 *       * **QTR**  = Quarterly - Original
                 *       * **SEMI** = Semi-Annual
                 *      */
                periodicity?: components["parameters"]["fundamentalPeriodicity"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Fundamental data items */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CompanyFundamentalsResponse"];
                };
            };
            400: components["responses"]["Company400"];
            401: components["responses"]["401"];
            403: components["responses"]["403"];
            500: components["responses"]["500"];
        };
    };
    getFdsFundamentalsMetrics: {
        parameters: {
            query?: {
                /** @description Filters the list of FF_* metrics by major category -
                 *       * **INCOME_STATEMENT** = Income Statement line items, such as Sales, Gross Profit, Net Income.
                 *       * **BALANCE_SHEET** = Balance Sheet line items, such as Assets, Liabilities, and Shareholders Equity.
                 *       * **CASH_FLOW** = Cash Flow Statement line items, such as Financing activities, Operation, and Per Share.
                 *       * **RATIOS** = Pre-calculated Ratios, including Financial, Growth Rates, Profitability, Liquidity, Size, and Valuation.
                 *       * **FINANCIAL_SERVICES** = Financial Statement Items modified for Financial Services companies.
                 *       * **INDUSTRY_METRICS** = Industry Specific Line Items or Modifications. View subcategory for list of Industries.
                 *       * **PENSION_AND_POSTRETIREMENT** = Accumulated Pension Benefit Obligations and related data.
                 *       * **MARKET_DATA** = General Market Data, such as Shares Outstanding. *Note - /factset-prices/prices/ endpoints may be better suited for pricing-related market data.*
                 *       * **MISCELLANEOUS** = Corporation Data, Financial Records details, Indicators.
                 *       * **DATES** = Relevant Dates
                 *      */
                category?: components["parameters"]["category"];
                /** @description Sub-Category Filter for the Primary Category Requested. Choose a related sub-category for the Category requested-
                 *       * **INCOME_STATEMENT** - INCOME_STATEMENT, NON-OPERATING, PER_SHARE, SUPPLEMENTAL, EXPENSES, OPERATING_COST, NON-RECURRING_ITEMS, REVENUES, OTHER
                 *       * **BALANCE_SHEET** - ASSETS, BALANCE_SHEET, HEALTHCARE, LIABILITIES, PER_SHARE, SHAREHOLDERS_EQUITY, SUPPLEMENTAL
                 *       * **CASH_FLOW** - CASH_FLOW, CHANGE_IN_CASH, FINANCING, INVESTING, OPERATING, PER_SHARE, SUPPLEMENTAL, FINANCING_ACTIVITIES, OPERATING_ACTIVITIES, INVESTING_ACTIVITIES
                 *       * **RATIOS** - FINANCIAL, GROWTH_RATE, LIQUIDITY, PROFITABILITY, SIZE, VALUATION
                 *       * **FINANCIAL_SERVICES** - BALANCE_SHEET, INCOME_STATEMENT, SUPPLEMENTAL
                 *       * **INDUSTRY_METRICS** - AIRLINES, BANKING, HOTELS_AND_GAMING, METALS_AND_MINING, OIL_AND_GAS, PHARMACEUTICAL, REIT, RETAIL, BANK, INSURANCE, UTILITY
                 *       * **PENSION_AND_POSTRETIREMENT** - PENSION_AND_POSTRETIREMENT
                 *       * **MARKET_DATA** - MARKET_DATA
                 *       * **MISCELLANEOUS** - CLASSIFICATION, CORPORATE_DATA, FINANCIAL_RECORDS, INDICATOR, EMPLOYEES_AND_MANAGEMENT
                 *       * **DATES** - DATES
                 *      */
                subcategory?: components["parameters"]["subcategory"];
                /** @description Returns general data type of the metrics like integer, float or strings, when left blankmetrics with all data types would be returned
                 *      */
                metricDataType?: components["parameters"]["metricDataType"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Fundamental data metric items */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MetricsResponse"];
                };
            };
            400: components["responses"]["400"];
            401: components["responses"]["401"];
            403: components["responses"]["403"];
            415: components["responses"]["415"];
            500: components["responses"]["500"];
        };
    };
    getBatchStatus: {
        parameters: {
            query: {
                /** @description Batch Request identifier. */
                id: components["parameters"]["batchId"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The batch Request has been completed and the response has been created. */
            201: {
                headers: {
                    /**
                     * @description Path to Batch Request result.
                     * @example batch-result?id=2df43e85-ea0f-45c6-bf4a-2baf4d1eaa3c
                     */
                    Location?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BatchStatusResponse"];
                };
            };
            /** @description The batch Request has not finished and the result has NOT been created. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BatchStatusResponse"];
                };
            };
            404: components["responses"]["404"];
        };
    };
    getBatchData: {
        parameters: {
            query: {
                /** @description Batch Request identifier. */
                id: components["parameters"]["batchId"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Request Response Object when the batch request has been completed and the response is created */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BatchResultResponse"];
                };
            };
            /** @description The batch Request has not finished and the result has NOT been created. */
            202: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BatchStatusResponse"];
                };
            };
            404: components["responses"]["404"];
        };
    };
}

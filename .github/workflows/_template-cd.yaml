name: "[TEMPLATE] CD"

on:
  workflow_call:
    inputs:
      service-name:
        description: "Name of the service (e.g., factset-mcp)"
        required: true
        type: string
      service-version:
        description: "Version of the package (e.g., 1.2.0)"
        required: true
        type: string
      dockerfile:
        description: "Path to a specific Dockerfile (e.g., services/factset-mcp/deploy/Dockerfile)"
        default: "./Dockerfile"
        type: string

jobs:
  # Build and push container to registry
  containerize:
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    permissions:
      packages: write
    env:
      CHART_REPO: ghcr.io/unique-ag/connectors/services/${{ inputs.service-name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3

      # TODO: remove me and let `corepack` do its job to use and setup the correct package manager in the dockerfile
      - name: Extract PNPM version for build
        id: pnpm-version
        run: |
          PNPM_VERSION=$(jq -r '.packageManager | split("@")[1]' package.json)
          echo "version=$PNPM_VERSION" >> $GITHUB_OUTPUT

      - name: Add docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.CHART_REPO }}
          tags: |
            type=raw,value=${{ inputs.service-version }}

      - name: Login to registry hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container
        uses: docker/build-push-action@v6
        with:
          file: ${{ inputs.dockerfile }}
          context: .
          platforms: linux/amd64
          push: true
          provenance: false
          cache-from: |
            type=gha,scope=${{ inputs.service-name }}
            type=registry,ref=${{ env.CHART_REPO }}:cache
          cache-to: |
            type=registry,ref=${{ env.CHART_REPO }}:cache,mode=min
          build-args: |
            APP_NAME=${{ inputs.service-name }}
            PNPM_VERSION=${{ steps.pnpm-version.outputs.version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

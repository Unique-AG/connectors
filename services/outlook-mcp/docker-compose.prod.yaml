version: '3.8'

services:
  outlook-mcp-migration:
    build:
      context: ../..  # Build from monorepo root
      dockerfile: ./servers/outlook-mcp/Dockerfile
      args:
        - MAX_HEAP_MB=1024
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/outlook_mcp?schema=public
    command: ["pnpm", "run", "db:migrate:deploy"]
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - outlook-mcp-network
    restart: "no"

  outlook-mcp:
    build:
      context: ../..  # Build from monorepo root
      dockerfile: ./servers/outlook-mcp/Dockerfile
      args:
        - MAX_HEAP_MB=1024
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - SELF_URL=http://localhost:3000
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/outlook_mcp?schema=public
      - MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID}
      - MICROSOFT_CLIENT_SECRET=${MICROSOFT_CLIENT_SECRET}
      - HMAC_SECRET=${HMAC_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      outlook-mcp-migration:
        condition: service_completed_successfully
    restart: unless-stopped
    networks:
      - outlook-mcp-network

  postgres:
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=outlook_mcp
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - outlook-mcp-network

volumes:
  postgres_data:

networks:
  outlook-mcp-network:
    driver: bridge
